%YAML:1.0

#common parameters
imu_topic: "/hummingbird/imu" #   "/hummingbird/barza/imu"
image_topic: "/hummingbird/rgb_camera/camera_1/image_raw" #   "/hummingbird/barza/cam"
control_topic: "/hummingbird/control_command"

output_path: "/home/barza/barza-vins-out/output/"
rpg_eval_path: "/home/barza/catkin_ws/src/rpg_trajectory_evaluation/results/laptop"
simulation_name: "helical_eight_cY_nF_5ms" #"/laptop_vins_sim_lowFreqControl"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 752  #320
image_height: 480 # 240
distortion_parameters:
   k1: 0 #-2.917e-01 , , , 
   k2: 0 #8.228e-02  
   p1: 0 #5.333e-05  
   p2: 0 #-1.578e-04 
projection_parameters:
   fx:  458.646626144965 #vins: 4.616e+02  #    458.654 0.000000, , 0.000000, 277.41554761864444, , 0.000000, 0.000000, 1.000000] old_sim: 171.74818376790037
   fy:  458.646626144965 #vins:4.603e+02 #    457.296 old_sim: 171.74818376790037
   cx:  376.5 #vins:3.630e+02 #    367.215 old_sim: 160.5
   cy:  240.5 #vins: 2.481e+02 #    248.375 old_sim: 120.5

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0, 0, 1, # 0, 0, 1
          -1, 0, 0, #-1, 0, 0
           0,  -1, 0] #0, -1, 0
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.3, 0.0, -0.10]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30 #30            # min distance between two features 
freq: 10 #10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n:  0.09   #08 #0.004          # accelerometer measurement noise standard deviation. #0.3 for slow 0.5 m/s sim
gyr_n:  0.004 #0.004  v  0.0003394       # gyroscope measurement noise standard deviation.  #0.1 for slow 0.5m/s sim   #0.05   1.6968e-04  #
acc_w:  0.00004 # v   0.006      # accelerometer bias random work noise standard deviation.  #0.02  0.003 #
gyr_w:  0.000038785 #  v   2.0e-6  0.000038785  # gyroscope bias random work noise standard deviation.     #4.0e-5  1.9393e-05 # 
g_norm: 9.81007     # gravity magnitude

#model parameters       The more accurate parameters you provide, the better performance
control_thrust_z_n: 0.08 #0.02 (rmse 0.92) #0.08 vs 0.01            # control input acceleration noise standard deviation. # 0.001 better rmse 0.32
control_thrust_x_y_n: 0.03 #0.08 (rmse 0.92) #0.08 better (rmse 0.09)vs 0.03 (rmse 0.1)
apply_model_preintegration:  1      # set to 1 to apply model preinteg
euler_integration: 0                # for control inputs
mass: 0.73                       # mass of asctec hummingbird 0.716

#loop closure parameters
loop_closure: 0                   # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/barza/barza-vins-out/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
